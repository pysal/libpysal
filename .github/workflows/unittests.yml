 on:
   push:
     branches:
     - '*'
   pull_request:
     branches:
     - '*'
   schedule:
     - cron: '59 21 * * *'

 jobs:
   unittests:
     name: ${{ matrix.os }}, ${{ matrix.environment-file }}
     runs-on: ${{ matrix.os }}
     env:
       FETCH_EXAMPLES: python -c 'import libpysal; libpysal.examples.fetch_all()'
       RUN_TEST: pytest -v -n auto libpysal --cov libpysal --cov-config .coveragerc --cov-report xml --color yes --cov-append --cov-report term-missing
     #timeout-minutes: 25
     strategy:
       matrix:
         os: ['ubuntu-latest']
         environment-file: [ci/37.yaml, ci/38.yaml, ci/39.yaml, ci/310.yaml]
         include:
           - environment-file: ci/310.yaml
             os: macos-latest
           - environment-file: ci/310.yaml
             os: windows-latest
     
     steps:
       - name: checkout repo
         uses: actions/checkout@v2
       
       - name: setup micromamba
         uses: mamba-org/provision-with-micromamba@main
         with:
           environment-file: ${{ matrix.environment-file }}
           micromamba-version: 'latest'
      
       - name: run tests - bash
         shell: bash -l {0}
         run: |
           ${{ env.FETCH_EXAMPLES }}
           ${{ env.RUN_TEST }}
         if: matrix.os != 'windows-latest'
       
       - name: run tests - powershell
         shell: powershell
         run: |
           ${{ env.FETCH_EXAMPLES }}
           ${{ env.RUN_TEST }}
         if: matrix.os == 'windows-latest'
      
       - name: codecov
         uses: codecov/codecov-action@v2 
         with:
           token: ${{ secrets.CODECOV_TOKEN }}
           file: ./coverage.xml
           name: libpysal-codecov
