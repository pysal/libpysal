 on:
   push:
     branches:
     - '*'
   pull_request:
     branches:
     - '*'
   schedule:
     - cron: '59 21 * * *'

 jobs:
   unittests:
     name: conda (${{ matrix.os }}, ${{ matrix.environment-file }})
     runs-on: ${{ matrix.os }}
    #  timeout-minutes: 25
     strategy:
       matrix:
         os: ['macos-latest', 'ubuntu-latest', 'windows-latest']
         environment-file: [ci/36.yaml, ci/37.yaml, ci/38.yaml]
         exclude:
           - environment-file: ci/36.yaml
             os: windows-latest
     defaults:
       run:
         shell: bash -l {0}
     steps:
       - uses: actions/checkout@v2
       - uses: actions/cache@v2.1.4
         env:
           CACHE_NUMBER: 0
         with:
           path: ~/conda_pkgs_dir
           key: ${{ matrix.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles(matrix.environment-file) }}
       - uses: conda-incubator/setup-miniconda@v2
         with:
            miniconda-version: 'latest'
            mamba-version: '*'
            channels: conda-forge
            channel-priority: true
            auto-update-conda: false
            auto-activate-base: false
            environment-file: ${{ matrix.environment-file }}
            activate-environment: test
            use-only-tar-bz2: true
       - run: mamba info --all
       - run: mamba list
       - run: conda config --show-sources
       - run: conda config --show
       - run: python -c 'import libpysal; libpysal.examples.fetch_all()'
       - run: py.test -v libpysal --cov=libpysal --cov-report=xml
       - name: codecov (${{ matrix.os }}, ${{ matrix.environment-file }})
         uses: codecov/codecov-action@v1
         with:
           token: ${{ secrets.CODECOV_TOKEN }}
           file: ./coverage.xml
           name: libpysal-codecov
