 # Release package on GitHub and publish to PyPI
 
 # Important: In order to trigger this workflow for the organization
 # repo (organzation-name/repo-name vs. user-name/repo-name), a tagged
 # commit must be made to *organzation-name/repo-name*. If the tagged
 # commit is made to *user-name/repo-name*, a release will be published
 # under the user's name, not the organzation.
 
 #--------------------------------------------------
 name: release_and_publish

 on:
   push:
     # Sequence of patterns matched against refs/tags
     tags:
       - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

 jobs:
   build:
     runs-on: ubuntu-latest
     steps:
     - uses: actions/checkout@v2.3.4
     - name: Set up Python
       uses: actions/setup-python@v2
       with:
         python-version: '3.x'
     - name: Install dependencies
       run: |
         python -m pip install --upgrade pip
         pip install setuptools wheel twine jupyter urllib3 pandas pyyaml
         python setup.py sdist bdist_wheel
     - name: Run Changelog
       run: |
         jupyter nbconvert --to notebook --execute --inplace --ExecutePreprocessor.timeout=-1 --ExecutePreprocessor.kernel_name=python3 tools/gitcount.ipynb
     - name: Cat Changelog
       uses: pCYSl5EDgo/cat@master
       id: changetxt
       with:
         path: ./tools/changelog.md
       env:
         TEXT: ${{ steps.changetxt.outputs.text }}
     - name: Create Release
       id: create_release
       uses: actions/create-release@v1
       env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # token is provided by GHA, DO NOT create
       with:
         tag_name: ${{ github.ref }}
         release_name: Release ${{ github.ref }}
         body: ${{ steps.changetxt.outputs.text }}
         draft: false
         prerelease: false
     - name: Get Asset name
       run: |
         export PKG=$(ls dist/)
         set -- $PKG
         echo "name=$1" >> $GITHUB_ENV
     - name: Upload Release Asset
       id: upload-release-asset
       uses: actions/upload-release-asset@v1
       env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       with:
         upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
         asset_path: dist/${{ env.name }}
         asset_name: ${{ env.name }}
         asset_content_type: application/zip
     - name: Publish distribution ðŸ“¦ to PyPI
       uses: pypa/gh-action-pypi-publish@master
       with:
         user: __token__
         password: ${{ secrets.PYPI_PASSWORD }}
